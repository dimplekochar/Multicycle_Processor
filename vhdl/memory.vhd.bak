library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;      
use ieee.numeric_std.all;
entity memory is   
    port
    (
    rf_d1          	: out std_logic_vector(15 downto 0);
    rf_d3          	: in  std_logic_vector(15 downto 0);
    write_bar   	        : in  std_logic;
    read_bar   	        : in  std_logic;
    rf_a1   	    : in  std_logic_vector(4 downto 0);
    rf_a3   	    : in  std_logic_vector(4 downto 0);
    clk,reset             : in  std_logic
    );
end entity;

architecture struct of memory is
type memoryloc is array(0 to 31) of std_logic_vector(15 downto 0); --65536 16-bit registers
signal mem : memoryloc := (others => "0000000000000000");
begin

    mem1: process(clk,write_bar,read_bar)
    begin
			if (reset = '1') then
			mem <= (others => "0000000000000000");
			elsif rising_edge(clk) and (write_bar = '0') then 
				mem(to_integer(unsigned(rf_a3))) <= rf_d3;
			end if;
			
rf_d1 <= mem(to_integer(unsigned(rf_a1)));

    end process;
	

end struct;
